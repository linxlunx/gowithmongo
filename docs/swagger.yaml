basePath: /
definitions:
  auth.LoginParam:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  auth.tokenResponse:
    properties:
      access_token:
        type: string
    type: object
  user.NewUser:
    properties:
      email:
        type: string
      fullname:
        type: string
      password:
        type: string
    type: object
  user.User:
    properties:
      email:
        type: string
      fullname:
        type: string
      id:
        type: string
      role:
        type: string
    type: object
host: localhost:5000
info:
  contact:
    email: x@linggar.asia
    name: Linggar Primahastoko
    url: http://linggar.asia
  description: My Boilerplate with Echo
  title: Go Restful API with Echo
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Auth Login
      operationId: auth-login
      parameters:
      - description: Auth Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/auth.LoginParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.tokenResponse'
      summary: Auth Login
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: User List
      operationId: users-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: User List
      tags:
      - users
  /users/{userID}:
    get:
      consumes:
      - application/json
      description: User Get By ID
      operationId: users-detail
      parameters:
      - description: User ID
        in: path
        name: userID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: User Get By ID
      tags:
      - users
  /users/add:
    post:
      consumes:
      - application/json
      description: User Add
      operationId: users-add
      parameters:
      - description: User Add
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.NewUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      security:
      - ApiKeyAuth: []
      summary: User Add
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
